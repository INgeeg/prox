https://www.youtube.com/watch?v=dwMFg6uxQ0I
dotnet new web -o dapper_minimal_api
--created app.db with User tabel
dotnet add package Dapper
dotnet add package Microsoft.Data.Sqlite                   #dotnet add package System.Data.SQLite
dotnet add package System.Data
dotnet add package Microsoft.Extensions.Configuration.Abstractions
dotnet add package Swashbuckle.AspNetCore               #for swagger


--upload image to docker hub

kubectl apply -f deployment.yaml
kubectl create -f deployment.yaml
kubectl delete -f deployment.yaml
kubectl get pod
kubectl exec -it dotnet-app-9cfff69d5-4445t -- /bin/sh          #published content in /app folder
kubectl apply -f secret-file.yaml
kubectl apply -f config-file.yaml
kubectl get secrets
kubectl get configmap
kubectl logs dotnet-app-7794ffbccd-dltt6                #optional

kubectl apply -f service.yaml                   #this is service but the type is NodePort, here pod port and service port must be 80 so that Node port can reach them 
..and http://localhost:31000/settings
kubectl exec -it dotnet-app-5bb74f959c-7kjdr -- /bin/sh





---Configure Key Vault Azure
https://docs.microsoft.com/en-us/aspnet/core/security/key-vault-configuration?view=aspnetcore-6.0#use-application-id-and-x509-certificate-for-non-azure-hosted-apps
https://docs.microsoft.com/en-us/cli/azure/install-azure-cli
https://www.ssl.com/how-to/create-a-pfx-p12-certificate-file-using-openssl?utm_source=youtube&utm_medium=video&utm_campaign=pfxpk12%2F
az login
az group create --name "myKVaultResourceGroup" -l "CentralUS"
az keyvault create --name "my-key-vault-store" --resource-group "myKVaultResourceGroup" --location "CentralUS"
az keyvault secret set --vault-name "my-key-vault-store" --name "ExamplePassword" --value "hVFkk965BuUv"
az keyvault secret set --vault-name "my-key-vault-store" --name "ExampleSetting--Two" --value "somesecrte value"
az keyvault secret show --name "ExampleSetting--Two" --vault-name "my-key-vault-store" --query "value"

dotnet add package Azure.Extensions.AspNetCore.Configuration.Secrets
dotnet add package Azure.Identity
dotnet add package Azure.Security.KeyVault.Secrets




---Polly
dotnet add package Polly



--create secret
dotnet user-secrets init
dotnet user-secrets set "KeyVaultConfig:ClientSecretId" ""
dotnet user-secrets list
dotnet user-secrets remove "AuthorApiKey"







--deploy on defferent namespace
kubectl create namespace meniki
kubectl -n meniki apply -f deployment.yaml
kubectl -n meniki apply -f config-file.yaml
kubectl -n meniki apply -f service.yaml
kubectl get deploy -n meniki
kubectl -n meniki get pods



--serilog
dotnet add package Serilog.AspNetCore
dotnet add package SerilogTimings
dotnet add package Serilog.Sinks.Seq
docker run --name seq -d --restart unless-stopped -e ACCEPT_EULA=Y -p 5341:80 datalust/seq:latest     #just run locally to monitor logs














--SOME DRAFTS

kubectl expose deployment dotnet-app --type=NodePort --name=dotnet-svc
kubectl get svc
kubectl describe services dotnet-svc















kubectl expose pod dotnet-app-6b77d594d5-4z2xl --name=dotnet-svc --port=8081 --type=NodePort                          
kubectl get svc
kubectl describe service dotnet-svc
kubectl get pods --selector="app=dotnet-app" --output=wide
curl http://192.168.0.171:32436/settings

kubectl exec -it dotnet-app-6b77d594d5-4z2xl -- /bin/sh

kubectl get pod -o wide






kubectl get event -n default   
kubectl get deploy
kubectl describe deployment
kubectl delete svc dotnet-svc
kubectl get svc -l app=dotnet-app            #with label






--tired this but did not work
docker run -d -p 5000:5000 --restart=always --name registry registry:2                 #creates local repo
docker tag dapper:1.3 localhost:5000/dapper
docker push localhost:5000/dapper
--put this link to deployment.yaml  localhost:5000/dapper